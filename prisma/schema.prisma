// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @default(autoincrement()) @id
  name            String?
  image           String?
  handle          String?   @unique
  email           String?   @unique
  emailVerified   DateTime? @map(name: "email_verified")
  createdAt       DateTime  @default(now()) @map(name: "created_at")
  updatedAt       DateTime  @updatedAt @map(name: "updated_at")
  reviews         Review[]

  @@map(name: "users")
}

model Review {
  id                  Int       @default(autoincrement()) @id
  content             String?
  author              User      @relation(fields: [authorId], references: [id])
  authorId            Int
  algorithms          Int @default(0)
  company             String?
  jobType             String?
  jobTitle            String?
  languages           String?
  liveCoding          Int @default(0)
  officePolicy        String?
  salaryRangeLow      Float?
  salaryRangeHigh     Float?
  systemDesign        Int @default(0)
  takeHome            Int @default(0)
  hired               String?
  votes               Int       @default(0)
  roundsOfInterviews  Int?
  technicalDifficulty Int?
}

model Account {
  id                 Int       @default(autoincrement()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}